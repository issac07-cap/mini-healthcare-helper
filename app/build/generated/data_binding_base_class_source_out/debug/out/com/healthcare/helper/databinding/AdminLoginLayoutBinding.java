// Generated by view binder compiler. Do not edit!
package com.healthcare.helper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.healthcare.helper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminLoginLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button AdminLoginBtn;

  @NonNull
  public final Button CancelAdminLoginBtn;

  @NonNull
  public final TextInputLayout PasswordEt;

  @NonNull
  public final TextInputLayout UsernameEt;

  private AdminLoginLayoutBinding(@NonNull RelativeLayout rootView, @NonNull Button AdminLoginBtn,
      @NonNull Button CancelAdminLoginBtn, @NonNull TextInputLayout PasswordEt,
      @NonNull TextInputLayout UsernameEt) {
    this.rootView = rootView;
    this.AdminLoginBtn = AdminLoginBtn;
    this.CancelAdminLoginBtn = CancelAdminLoginBtn;
    this.PasswordEt = PasswordEt;
    this.UsernameEt = UsernameEt;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminLoginLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminLoginLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_login_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminLoginLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AdminLoginBtn;
      Button AdminLoginBtn = ViewBindings.findChildViewById(rootView, id);
      if (AdminLoginBtn == null) {
        break missingId;
      }

      id = R.id.CancelAdminLoginBtn;
      Button CancelAdminLoginBtn = ViewBindings.findChildViewById(rootView, id);
      if (CancelAdminLoginBtn == null) {
        break missingId;
      }

      id = R.id.PasswordEt;
      TextInputLayout PasswordEt = ViewBindings.findChildViewById(rootView, id);
      if (PasswordEt == null) {
        break missingId;
      }

      id = R.id.UsernameEt;
      TextInputLayout UsernameEt = ViewBindings.findChildViewById(rootView, id);
      if (UsernameEt == null) {
        break missingId;
      }

      return new AdminLoginLayoutBinding((RelativeLayout) rootView, AdminLoginBtn,
          CancelAdminLoginBtn, PasswordEt, UsernameEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
