// Generated by view binder compiler. Do not edit!
package com.healthcare.helper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.healthcare.helper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPatientSignupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton PatientSignUpBtn;

  @NonNull
  public final TextInputEditText PatientSignUpNameEt;

  @NonNull
  public final TextInputEditText PatientSignUpPasswordEt;

  @NonNull
  public final TextInputEditText PatientSignUpPhoneEt;

  @NonNull
  public final LinearLayout linearLayout1;

  private FragmentPatientSignupBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton PatientSignUpBtn, @NonNull TextInputEditText PatientSignUpNameEt,
      @NonNull TextInputEditText PatientSignUpPasswordEt,
      @NonNull TextInputEditText PatientSignUpPhoneEt, @NonNull LinearLayout linearLayout1) {
    this.rootView = rootView;
    this.PatientSignUpBtn = PatientSignUpBtn;
    this.PatientSignUpNameEt = PatientSignUpNameEt;
    this.PatientSignUpPasswordEt = PatientSignUpPasswordEt;
    this.PatientSignUpPhoneEt = PatientSignUpPhoneEt;
    this.linearLayout1 = linearLayout1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPatientSignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPatientSignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_patient_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPatientSignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.PatientSignUpBtn;
      MaterialButton PatientSignUpBtn = ViewBindings.findChildViewById(rootView, id);
      if (PatientSignUpBtn == null) {
        break missingId;
      }

      id = R.id.PatientSignUpNameEt;
      TextInputEditText PatientSignUpNameEt = ViewBindings.findChildViewById(rootView, id);
      if (PatientSignUpNameEt == null) {
        break missingId;
      }

      id = R.id.PatientSignUpPasswordEt;
      TextInputEditText PatientSignUpPasswordEt = ViewBindings.findChildViewById(rootView, id);
      if (PatientSignUpPasswordEt == null) {
        break missingId;
      }

      id = R.id.PatientSignUpPhoneEt;
      TextInputEditText PatientSignUpPhoneEt = ViewBindings.findChildViewById(rootView, id);
      if (PatientSignUpPhoneEt == null) {
        break missingId;
      }

      LinearLayout linearLayout1 = (LinearLayout) rootView;

      return new FragmentPatientSignupBinding((LinearLayout) rootView, PatientSignUpBtn,
          PatientSignUpNameEt, PatientSignUpPasswordEt, PatientSignUpPhoneEt, linearLayout1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
